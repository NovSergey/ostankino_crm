"""sanitary breaks

Revision ID: 9b6209fa4405
Revises: a47168361ba9
Create Date: 2025-04-11 18:41:00.509440

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9b6209fa4405'
down_revision: Union[str, None] = 'a47168361ba9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sanitary_breaks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('object_from_id', sa.Integer(), nullable=False),
    sa.Column('object_to_id', sa.Integer(), nullable=False),
    sa.Column('time_break', sa.Integer(), nullable=False),
    sa.Column('sanitary_type', postgresql.ENUM('employee', 'car', 'tractor', name='sanitary_type_enum'), nullable=False),
    sa.ForeignKeyConstraint(['object_from_id'], ['objects.id'], ),
    sa.ForeignKeyConstraint(['object_to_id'], ['objects.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('sanitary_changes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sanitary_object_id', sa.Integer(), nullable=False),
    sa.Column('time_from', sa.Integer(), nullable=False),
    sa.Column('time_to', sa.Integer(), nullable=False),
    sa.Column('time_changed', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['sanitary_object_id'], ['sanitary_breaks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    op.drop_table('sanitary_changes')
    op.drop_table('sanitary_breaks')
    op.execute('DROP TYPE sanitary_type_enum')
    # ### end Alembic commands ###
