"""update employees

Revision ID: 7203c6be176b
Revises: 55b4a4700166
Create Date: 2025-04-06 22:30:37.812111

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7203c6be176b'
down_revision: Union[str, None] = '55b4a4700166'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('employees', 'phone',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('employees', 'role',
               existing_type=postgresql.ENUM('admin', 'employee', 'security', name='role_enum'),
               nullable=False)
    op.create_unique_constraint(None, 'objects', ['id'])
    op.create_unique_constraint(None, 'visit_history', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'visit_history', type_='unique')
    op.drop_constraint(None, 'objects', type_='unique')
    op.alter_column('employees', 'role',
               existing_type=postgresql.ENUM('admin', 'employee', 'security', name='role_enum'),
               nullable=True)
    op.alter_column('employees', 'phone',
               existing_type=sa.VARCHAR(),
               nullable=True)
    # ### end Alembic commands ###
