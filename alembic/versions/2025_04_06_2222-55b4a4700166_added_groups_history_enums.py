"""added groups history enums

Revision ID: 55b4a4700166
Revises: 418bc5b3bd7a
Create Date: 2025-04-06 22:22:43.712794

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '55b4a4700166'
down_revision: Union[str, None] = '418bc5b3bd7a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE TYPE role_enum AS ENUM ('admin', 'employee', 'security')")

    op.create_table('objects',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('visit_history',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('entry_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('exit_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('object_id', sa.Integer(), nullable=False),
    sa.Column('scanned_by_user_id', sa.Uuid(), nullable=False),
    sa.Column('employee_id', sa.Uuid(), nullable=False),
    sa.Column('status', postgresql.ENUM('Успешно', 'Ошибка', name='visit_status_enum'), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['object_id'], ['objects.id'], ),
    sa.ForeignKeyConstraint(['scanned_by_user_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.add_column('employees', sa.Column('phone', sa.String(), nullable=True))
    op.add_column('employees', sa.Column('role', postgresql.ENUM('admin', 'employee', 'security', name='role_enum'), nullable=True))
    op.add_column('employees', sa.Column('object_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'employees', 'objects', ['object_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'employees', type_='foreignkey')
    op.drop_column('employees', 'object_id')
    op.drop_column('employees', 'role')
    op.drop_column('employees', 'phone')
    op.drop_table('visit_history')
    op.drop_table('objects')
    op.execute("DROP TYPE role_enum")
    op.execute("DROP TYPE visit_status_enum")
    # ### end Alembic commands ###
